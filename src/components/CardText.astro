---
interface Props {
  name: string;
  type: string;
  class?: string;
}
const { name, type: typeText, class: className } = Astro.props;
---

<div class={className ? className : '' + ' card-text'}>
  <div class="card-text--title">{name}</div>
  <div class="card-text--mana"><slot name="mana" /></div>
  <div class="card-text--type">{typeText}</div>
  <div class="card-text--text"><slot /></div>
  <div class="card-text--size"><slot name="size" /></div>
  <div class="card-text--img"><slot name="img" /></div>
</div>

<style lang="scss">
  .card-text {
    display: grid;
    row-gap: 0.75rem;
    column-gap: 0.375rem;
    max-width: 100%;
    grid-template-columns: 1fr min-content fit-content(33%);
    grid-template-rows: 1.5rem 1rem 1fr fit-content(1rem);
  }

  .card-text--title {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
    font-size: 1.25rem;
  }

  .card-text--mana {
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    white-space: nowrap;
  }

  .card-text--mana > :global(i) {
    margin-left: 2px;
  }

  .card-text--type {
    grid-row: 2 / 3;
    grid-column: 1 / 3;
    white-space: nowrap;
  }

  .card-text--text {
    grid-row: 3 / 4;
    grid-column: 1 / 3;
  }

  .card-text--size {
    grid-row: 4 / 5;
    grid-column: 1 / 3;
    text-align: right;
    text-indent: 0;
  }

  .card-text--img {
    grid-row: 1 / 5;
    grid-column: 3 / 4;
  }

  .card-text--text > :global(p) {
    text-indent: 0;
  }
</style>
